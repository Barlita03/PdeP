import enfermedades.*
import personas.*

//------------------------------
//Temporada 1
//------------------------------

describe "Dr Casa - Temporada 1" {

    const malaria500 = new Infecciosa( celulasAmenazadas = 500 )
    const malaria800 = new Infecciosa( celulasAmenazadas = 800 )
    const otitis100 = new Infecciosa( celulasAmenazadas = 100 )
    const lupus10000 = new Autoinmune( celulasAmenazadas = 10000 )

    const logan = new Persona( temperatura = 36, cantidadDeCelulas = 3000000)
    const frank = new Persona( temperatura = 36, cantidadDeCelulas = 3500000)

    method initialize() {
        logan.contraerEnfermedad(malaria500)
        logan.contraerEnfermedad(otitis100)
        logan.contraerEnfermedad(lupus10000)
    }

    test "1. Frank contrae la malaria800" {
        frank.contraerEnfermedad(malaria800)

        assert.that( frank.tiene(malaria800) )
    }

    test "2. La malaria500 se reproduce" {
        malaria500.reproducirse()

        assert.equals( 1000, malaria500.celulasAmenazadas() )
    }

    test "3.a Logan vive un dia en su vida y no tiene celulas afectadas por enfermedades infecciosas" {
        logan.vivirUnosDias(1)

        assert.equals( 0, logan.cantidadDeCelulasAfectadasPorEnfermedadesAgresivas() )
    }


    test "3.b Logan vive un dia en su vida y el lupus es su enfermedad que mas celulas afecta" {
        logan.vivirUnosDias(1)

        assert.equals( lupus10000, logan.enfermedadQueMasAfecta() )
    }

    test "3.c Logan vive un dia en su vida y no esta en coma" {
        logan.vivirUnosDias(1)

        assert.that ( !logan.enComa() )
    }

    test "4.a Logan vive 31 dias en su vida y tiene 10000 celulas afectadas por enfermedades agresivas" {
        logan.vivirUnosDias(31)

        assert.equals( 10000, logan.cantidadDeCelulasAfectadasPorEnfermedadesAgresivas() )
    }

    test "4.b Logan vive 31 dias en su vida y el lupus es su enfermedad que mas celulas afecta" {
        logan.vivirUnosDias(31)

        assert.equals( lupus10000, logan.enfermedadQueMasAfecta() )
    }

    test "4.c Logan vive 31 dias en su vida y esta terriblemente en coma" {
        logan.vivirUnosDias(31)

        assert.that ( logan.enComa() )
    }
}

//------------------------------
//Temporada 2
//------------------------------

describe "Dr Casa - Temporada 2" {

    const malaria500 = new Infecciosa( celulasAmenazadas = 500 )
    const otitis100 = new Infecciosa( celulasAmenazadas = 100 )
    const lupus10000 = new Autoinmune( celulasAmenazadas = 10000 )

    const logan = new Persona( temperatura = 36, cantidadDeCelulas = 3000000)
    const cameron = new Medico( temperatura = 36, cantidadDeCelulas = 3500000, dosis = 10 )
    const house = new JefeDeDepartamento( temperatura = 36, cantidadDeCelulas = 3500000 )

    method initialize() {
        logan.contraerEnfermedad(malaria500)
        logan.contraerEnfermedad(otitis100)
        logan.contraerEnfermedad(lupus10000)

        house.agregarSubordinado(cameron)
    }

    test "1.a Las infecciosas se atenua correctamente" {
        malaria500.atenuarse(100)
        
        assert.equals( 400, malaria500.celulasAmenazadas() )
    }

    test "1.b Las autoinmunes se atenua correctamente" {
        lupus10000.atenuarse(500)

        assert.equals( 9500, lupus10000.celulasAmenazadas() )
    }

    test "2.a Un medico atiende correctamente" {
        cameron.atenderA(logan)

        assert.equals( 350, malaria500.celulasAmenazadas() )
    }

    test "2.b Un medico atiende correctamente" {
        cameron.atenderA(logan)

        assert.equals( 9850, lupus10000.celulasAmenazadas() )
    }
    
    test "2.c Un medico cura la otitis" {
        cameron.atenderA(logan)

        assert.that( !logan.tiene(otitis100) )
    }

    test "3. Un jefe de departamento atiende a una persona" {
        cameron.contraerEnfermedad(malaria500)

        house.atenderA(cameron)

        assert.equals(200, malaria500.celulasAmenazadas() )
    }

    test "4.a House contrae malaria" {
        house.contraerEnfermedad(malaria500)

        assert.equals( 350, malaria500.celulasAmenazadas() )
    }

    test "4.b Cameron contrae malaria" {
        cameron.contraerEnfermedad(malaria500)

        assert.equals( 350, malaria500.celulasAmenazadas() )
    }

    test "5 House contrae la muerte y muere" {
        house.contraerEnfermedad(muerte)

        house.vivirUnosDias(1)

        assert.that ( house.estaMuerto() )
    }
}